//Slave2 - Laptop: Comm15 / PC: Comm7 - Channel B (Red)

/*
Date: May 2018
Organization: BCCRC Imaging Unit
Authors: Varalee Chinbomsom and Daniela Tay Lee Sanchez
Description: Ramps up at one lookup table skipping clock pulses
*/

//Constants
#define DAC_RESOLUTION 12
#define PIN_SIGNAL 51
#define DAC DAC1


//Variables
volatile int i = 0; //Iterate through wave values for sine wave
volatile unsigned char mastersig = 0; //Signal to receive from master
volatile int samples = 0;
volatile int k = 0; //For testing fixed
volatile int count = 0; //counts clock ticks to skip
volatile int pulse = 6; //Start skipping this many ticks
volatile int points = 0; //Points outputted
volatile int cycles = 180; //Num of cycles to complete on each ramp up

//Lookup tables
static int * wave; //To choose table

static int wave_1000[1000] = 
{
3833,3827,3821,3814,3808,3801,3794,3788,3781,3774,3767,3760,3753,3746,3738,3731,3724,3716,3709,
3701,3694,3686,3678,3670,3663,3655,3647,3639,3630,3622,3614,3606,3597,3589,3580,3572,3563,3554,3546,3537,3528,3519,3510,3501,
3492,3483,3474,3464,3455,3446,3436,3427,3417,3407,3398,3388,3378,3369,3359,3349,3339,3329,3319,3309,3298,3288,3278,3268,3257,
3247,3236,3226,3215,3205,3194,3183,3173,3162,3151,3140,3129,3118,3107,3096,3085,3074,3063,3052,3040,3029,3018,3006,2995,2984,
2972,2961,2949,2938,2926,2914,2903,2891,2879,2867,2856,2844,2832,2820,2808,2796,2784,2772,2760,2748,2736,2724,2711,2699,2687,
2675,2662,2650,2638,2625,2613,2601,2588,2576,2563,2551,2538,2526,2513,2501,2488,2476,2463,2450,2438,2425,2413,2400,2387,2374,
2362,2349,2336,2324,2311,2298,2285,2272,2260,2247,2234,2221,2208,2195,2183,2170,2157,2144,2131,2118,2105,2093,2080,2067,2054,
2041,2028,2015,2002,1990,1977,1964,1951,1938,1925,1912,1900,1887,1874,1861,1848,1835,1823,1810,1797,1784,1771,1759,1746,1733,
1721,1708,1695,1682,1670,1657,1645,1632,1619,1607,1594,1582,1569,1557,1544,1532,1519,1507,1494,1482,1470,1457,1445,1433,1420,
1408,1396,1384,1371,1359,1347,1335,1323,1311,1299,1287,1275,1263,1251,1239,1228,1216,1204,1192,1181,1169,1157,1146,1134,1123,
1111,1100,1089,1077,1066,1055,1043,1032,1021,1010,999,988,977,966,955,944,933,922,912,901,890,880,869,859,848,
838,827,817,807,797,786,776,766,756,746,736,726,717,707,697,688,678,668,659,649,640,631,621,612,603,
594,585,576,567,558,549,541,532,523,515,506,498,489,481,473,465,456,448,440,432,425,417,409,401,394,
386,379,371,364,357,349,342,335,328,321,314,307,301,294,287,281,274,268,262,255,249,243,237,231,225,
219,213,208,202,197,191,186,180,175,170,165,160,155,150,145,141,136,131,127,122,118,114,110,105,101,
97,94,90,86,82,79,75,72,69,65,62,59,56,53,50,47,45,42,39,37,35,32,30,28,26,
24,22,20,18,17,15,13,12,11,9,8,7,6,5,4,3,3,2,2,1,1,0,0,0,0,
0,0,0,1,1,1,2,2,3,4,5,6,7,8,9,10,11,13,14,16,17,19,21,23,25,
27,29,31,33,36,38,41,43,46,49,52,54,57,61,64,67,70,74,77,81,84,88,92,95,99,
103,107,112,116,120,125,129,134,138,143,148,152,157,162,167,173,178,183,188,194,199,205,211,216,222,
228,234,240,246,252,258,265,271,278,284,291,297,304,311,318,325,332,339,346,353,360,368,375,382,390,
397,405,413,421,429,436,444,452,461,469,477,485,494,502,510,519,528,536,545,554,563,572,580,589,599,
608,617,626,635,645,654,664,673,683,692,702,712,722,731,741,751,761,771,781,792,802,812,822,833,843,
853,864,874,885,896,906,917,928,939,949,960,971,982,993,1004,1015,1027,1038,1049,1060,1072,1083,1094,1106,1117,
1129,1140,1152,1163,1175,1187,1198,1210,1222,1234,1245,1257,1269,1281,1293,1305,1317,1329,1341,1353,1365,1378,1390,1402,1414,
1426,1439,1451,1463,1476,1488,1500,1513,1525,1538,1550,1563,1575,1588,1600,1613,1626,1638,1651,1663,1676,1689,1701,1714,1727,
1740,1752,1765,1778,1791,1803,1816,1829,1842,1855,1867,1880,1893,1906,1919,1932,1945,1957,1970,1983,1996,2009,2022,2035,2048,2048,2060,2073,2086,2099,2112,2125,2138,2150,2163,2176,2189,2202,2215,2228,2240,2253,2266,2279,2292,2304,2317,2330,2343,2355,
2368,2381,2394,2406,2419,2432,2444,2457,2469,2482,2495,2507,2520,2532,2545,2557,2570,2582,2595,2607,2619,2632,2644,2656,2669,
2681,2693,2705,2717,2730,2742,2754,2766,2778,2790,2802,2814,2826,2838,2850,2861,2873,2885,2897,2908,2920,2932,2943,2955,2966,
2978,2989,3001,3012,3023,3035,3046,3057,3068,3080,3091,3102,3113,3124,3135,3146,3156,3167,3178,3189,3199,3210,3221,3231,3242,
3252,3262,3273,3283,3293,3303,3314,3324,3334,3344,3354,3364,3373,3383,3393,3403,3412,3422,3431,3441,3450,3460,3469,3478,3487,
3496,3506,3515,3523,3532,3541,3550,3559,3567,3576,3585,3593,3601,3610,3618,3626,3634,3643,3651,3659,3666,3674,3682,3690,3698,
3705,3713,3720,3727,3735,3742,3749,3756,3763,3770,3777,3784,3791,3798,3804,3811,3817,3824,3830,3837,3843,3849,3855,3861,3867,
3873,3879,3884,3890,3896,3901,3907,3912,3917,3922,3928,3933,3938,3943,3947,3952,3957,3961,3966,3970,3975,3979,3983,3988,3992,
3996,4000,4003,4007,4011,4014,4018,4021,4025,4028,4031,4034,4038,4041,4043,4046,4049,4052,4054,4057,4059,4062,4064,4066,4068,
4070,4072,4074,4076,4078,4079,4081,4082,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4093,4094,4094,4094,4095,4095,4095,
4095,4095,4095,4095,4094,4094,4093,4093,4092,4092,4091,4090,4089,4088,4087,4086,4084,4083,4082,4080,4078,4077,4075,4073,4071,
4069,4067,4065,4063,4060,4058,4056,4053,4050,4048,4045,4042,4039,4036,4033,4030,4026,4023,4020,4016,4013,4009,4005,4001,3998,
3994,3990,3985,3981,3977,3973,3968,3964,3959,3954,3950,3945,3940,3935,3930,3925,3920,3915,3909,3904,3898,3893,3887,3882,3876,
3870,3864,3858,3852,3846,3840
};

static int wave_500[500] =
{
3850,3838,3825,3812,3799,3785,3772,3758,3743,3729,3714,
3699,3683,3668,3652,3636,3619,3603,3586,3569,3551,3534,3516,3498,3479,3461,3442,3423,3404,3384,3365,3345,3325,3305,3284,3263,
3243,3222,3200,3179,3157,3136,3114,3092,3069,3047,3024,3002,2979,2956,2933,2909,2886,2862,2838,2815,2791,2767,2742,2718,2694,
2669,2645,2620,2595,2570,2545,2520,2495,2470,2445,2419,2394,2368,2343,2317,2292,2266,2241,2215,2189,2163,2138,2112,2086,2060,
2035,2009,1983,1957,1932,1906,1880,1854,1829,1803,1778,1752,1727,1701,1676,1650,1625,1600,1575,1550,1525,1500,1475,1450,1426,
1401,1377,1353,1328,1304,1280,1257,1233,1209,1186,1162,1139,1116,1093,1071,1048,1026,1003,981,959,938,916,895,873,852,
832,811,790,770,750,730,711,691,672,653,634,616,597,579,561,544,526,509,492,476,459,443,427,412,396,
381,366,352,337,323,310,296,283,270,257,245,233,221,210,198,187,177,167,156,147,137,128,119,111,103,
95,87,80,73,66,60,54,48,43,38,33,28,24,21,17,14,11,9,6,4,3,2,1,0,0,
0,0,1,2,4,5,7,10,12,15,19,22,26,31,35,40,45,51,57,63,69,76,83,91,99,
107,115,124,133,142,152,161,172,182,193,204,215,227,239,251,264,276,290,303,317,330,345,359,374,389,
404,420,435,451,468,484,501,518,535,553,570,588,607,625,644,663,682,701,720,740,760,780,801,821,842,
863,884,905,927,948,970,992,1014,1037,1059,1082,1105,1128,1151,1174,1197,1221,1245,1268,1292,1316,1340,1365,1389,1414,
1438,1463,1488,1512,1537,1562,1587,1613,1638,1663,1688,1714,1739,1765,1790,1816,1842,1867,1893,1919,1944,1970,1996,2022,2048,2048,2073,2099,2125,2151,2176,2202,2228,2253,2279,2305,2330,2356,2381,2407,2432,2457,2482,2508,2533,2558,2583,2607,2632,2657,
2681,2706,2730,2755,2779,2803,2827,2850,2874,2898,2921,2944,2967,2990,3013,3036,3058,3081,3103,3125,3147,3168,3190,3211,3232,
3253,3274,3294,3315,3335,3355,3375,3394,3413,3432,3451,3470,3488,3507,3525,3542,3560,3577,3594,3611,3627,3644,3660,3675,3691,
3706,3721,3736,3750,3765,3778,3792,3805,3819,3831,3844,3856,3868,3880,3891,3902,3913,3923,3934,3943,3953,3962,3971,3980,3988,
3996,4004,4012,4019,4026,4032,4038,4044,4050,4055,4060,4064,4069,4073,4076,4080,4083,4085,4088,4090,4091,4093,4094,4095,4095,
4095,4095,4094,4093,4092,4091,4089,4086,4084,4081,4078,4074,4071,4067,4062,4057,4052,4047,4041,4035,4029,4022,4015,4008,4000,
3992,3984,3976,3967,3958,3948,3939,3928,3918,3908,3897,3885,3874,3862
};

//Method to configure Arduino
void setup() 
{
   //Set pins as inputs or outputs
   pinMode(DAC, OUTPUT);   
   pinMode(PIN_SIGNAL, INPUT); 
   analogWriteResolution(DAC_RESOLUTION); //Set up resolution
   attachInterrupt(digitalPinToInterrupt(PIN_SIGNAL), PIN_ISR, RISING); //Call pin_ISR when 51 goes from low to high
}

//Method to loop indefinetely
void loop() 
{
    //Start after 1000 clock ticks
    if (k == 1000) 
    {
      mastersig = 1; //start
      wave = wave_1000;
      samples=1000;
    }
    
}

//Interrupt method, everytime the pin goes low to high
void PIN_ISR() 
{ 
  
  k++;
  
  if (mastersig == 1) 
  {
    if (count >= pulse) //If skip pulse number of pulses
    {
      analogWrite(DAC, wave[i]); //Write on DAC
      i = (i+1)%samples;
      points++; //Wrote a point

      count = -1; //Restart count of clock ticks, increase at end so start -1
      
      if ((pulse >= 1) && (points == samples*cycles)) //If still want to skip 2 pulses
      {
        pulse--; //Decrease pulses to skip
        points=0; //restar points written    
      }

      else if (pulse == 0)//Now we are supossed to skip 0 pulses
      {
        //First skip, out, out, skip, out, out, skip, out out
        if (points < samples*cycles) //Only for those cycles, then it will not skip clocks bc count is always greater
        {
          if ((points%3) == 0) //want to skip 1 point
            count = -2; //Skip once be -1 on top so skips, then 0 so outputs
          else 
            count = -1; //Do output point
        }
      }
    }//End if count>= pulse

    count++;
    
  }//End if mastersig is 1
 
  else
    analogWrite(DAC1, 0); //Just output value 0 (line) if signal to start is not
}

